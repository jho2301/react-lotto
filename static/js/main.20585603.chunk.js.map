{"version":3,"sources":["Global.styles.ts","components/common/Button.tsx","components/common/Input.tsx","components/common/Wrapper.tsx","components/PaymentForm/PaymentForm.styles.tsx","constants/ticket.ts","services/validation.ts","utils/validation.ts","constants/alertMessage.ts","components/PaymentForm/PaymentForm.tsx","components/common/Toggle.tsx","components/TicketList/TicketList.styles.tsx","components/TicketList/TicketItem/TicketItem.styles.tsx","components/TicketList/TicketItem/TicketItem.tsx","components/TicketList/TicketList.tsx","components/common/Modal.tsx","components/ResultModal/ResultModal.styles.tsx","components/ResultModal/ResultTableRow/ResultTableRow.tsx","utils/format.ts","constants/game.ts","services/game.ts","components/ResultModal/ResultModal.tsx","components/WinningNumberForm/WinningNumberForm.styles.tsx","components/WinningNumberForm/WinningNumberForm.tsx","App.styles.ts","services/tickets.ts","utils/random.ts","utils/date.ts","components/RemainedTime/RemainedTime.styles.tsx","components/RemainedTime/RemainedTime.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","normalize","Button","styled","button","fullWidth","Input","input","flexCenter","css","Wrapper","div","display","PaymentFormWrapper","form","PaymentFormLabel","label","TICKET","Object","freeze","NUMBER_LIST_LENGTH","CORRECT_NUMBER_LENGTH","PRICE","MIN_NUMBER","MAX_NUMBER","isWinningNumberDuplicated","array","numbers","bonus","Set","size","length","ALERT_MESSAGE","SHOULD_BUY_TICKET","SHOULD_MORE_THAN_MINIMUM_PAYMENT","SHOULD_INPUT_ALL_NUMBERS","DUPLICATED_NUMBER_EXIST","NUMBER_RANGE_EXCEEDED","PaymentForm","handlePayment","useState","payment","setPayment","onSubmit","event","preventDefault","isValidPayment","alert","type","onChange","target","valueAsNumber","value","placeholder","name","required","ToggleWrapper","Toggle","onToggle","children","checked","className","TicketListWrapper","TicketListHeader","detailedStyle","List","ul","isToggled","TicketItemWrapper","TicketItem","ticketNumbers","isDetailMode","join","TicketList","tickets","setIsToggled","map","ticket","id","ModalWrapper","ModalInner","ModalClose","Modal","handleModalClose","onClick","viewBox","d","ResultModalWrapper","ResultTable","table","ResultTableRow","number","match","matchCount","prize","isBonus","Number","isNaN","toLocaleString","RANK_INDEX","PRIZE","MATCH","hasBonus","includes","getWinnerCounts","winningNumber","winnerCounts","Array","fill","forEach","rankIndex","rankIndexMap","6","5","4","3","reduce","acc","ticketNumber","isInIndex","getRankIndex","computeResult","profit","winnerCount","index","getTotalProfit","ResultModal","resetGame","FIRST","SECOND","THIRD","FOURTH","FIFTH","rank","WinningNumberFormWrapper","isInSetMap","setMap","keys","WinningNumberForm","formRef","handleWinningNumber","first","setFirst","second","setSecond","third","setThird","fourth","setFourth","fifth","setFifth","sixth","setSixth","setBonus","handleWinningNumberInputChange","ref","el","idx","AppWrapper","issueTickets","ticketCount","Math","floor","min","max","add","random","nanoid","generateTicket","getHours","time","getMinutes","getSeconds","RemainedTimeWrapper","RemainedTime","remainTime","setRemainTime","remainTimerId","setInterval","announcementDate","Date","setDate","getDate","abs","getDay","setHours","setMinutes","setSeconds","getTime","now","getRemainedTime","useEffect","clearInterval","App","setTickets","isModalOpen","setIsModalOpen","setWinningNumber","winningNumberFormRef","createRef","current","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20585603.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n  html,\n  body,\n  ul {\n    margin: 0;\n    height: 100%;\n    font-size: 16px;\n    padding: 0;\n  }\n   \n  svg {\n    display: block;\n  }\n\n  * {\n    box-sizing: border-box;    \n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\ninterface Props {\n  fullWidth?: boolean;\n}\n\nconst Button = styled.button<Props>`\n  background-color: #00bcd4;\n  height: 36px;\n  min-width: 64px;\n  padding: 0 16px;\n  border-radius: 4px;\n  outline: 0;\n  border-style: none;\n  cursor: pointer;\n  font-size: 0.8rem;\n  width: ${({ fullWidth }) => fullWidth && '100%'};\n\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\ninterface Props {\n  fullWidth?: boolean;\n}\n\nconst Input = styled.input<Props>`\n  padding: 0.5rem;\n  margin: 0 0.25rem;\n\n  width: ${({ fullWidth }) => (fullWidth ? '100%' : '38px')};\n  height: 36px;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport default Input;\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  display?: 'block' | 'flex' | 'inline-block';\n}\n\nconst flexCenter = css`\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Wrapper = styled.div<Props>`\n  display: ${({ display }) => display || 'block'};\n  ${({ display }) => display === 'flex' && flexCenter}\n`;\n","import styled from 'styled-components';\n\nexport const PaymentFormWrapper = styled.form`\n  width: 100%;\n`;\n\nexport const PaymentFormLabel = styled.label`\n  display: inline-block;\n  margin-bottom: 20px;\n`;\n","const TICKET = Object.freeze({\n  NUMBER_LIST_LENGTH: 6,\n  CORRECT_NUMBER_LENGTH: 7,\n  PRICE: 1000,\n  MIN_NUMBER: 1,\n  MAX_NUMBER: 45,\n});\n\nexport default TICKET;\n","import ALERT_MESSAGE from '../constants/alertMessage';\nimport TICKET from '../constants/ticket';\nimport { WinningNumber } from '../types';\nimport { hasDuplicateElement } from '../utils/validation';\n\nexport const isValidPayment = (payment: number) => payment < TICKET.PRICE;\n\nexport const isValidWinningNumber = (winningNumber: number) => {\n  return winningNumber >= TICKET.MIN_NUMBER && winningNumber <= TICKET.MAX_NUMBER;\n};\n\nexport const isWinningNumberDuplicated = ({ numbers, bonus }: WinningNumber) => {\n  return hasDuplicateElement<number>([...numbers, bonus]);\n};\n","export const hasDuplicateElement = <T>(array: T[]): boolean => {\n  return new Set(array).size !== array.length;\n};\n","import TICKET from './ticket';\n\nconst ALERT_MESSAGE = Object.freeze({\n  SHOULD_BUY_TICKET: '티켓을 구매하지 않았습니다. 티켓을 구매해주세요!',\n  SHOULD_MORE_THAN_MINIMUM_PAYMENT: `구입 금액은 최소 ${TICKET.PRICE}원 이상이여야 합니다.`,\n  SHOULD_INPUT_ALL_NUMBERS: '모든 번호를 입력해주셔야 결과를 확인할 수 있습니다.',\n  DUPLICATED_NUMBER_EXIST: '번호들 중 중복된 숫자가 존재합니다.',\n  NUMBER_RANGE_EXCEEDED: `${TICKET.MIN_NUMBER} ~ ${TICKET.MAX_NUMBER} 사이의 숫자들만 번호로 입력해주세요`,\n});\n\nexport default ALERT_MESSAGE;\n","import { ChangeEvent, FormEvent, FC, useState } from 'react';\nimport Button from '../common/Button';\nimport Input from '../common/Input';\nimport { Wrapper } from '../common/Wrapper';\nimport { PaymentFormWrapper, PaymentFormLabel } from './PaymentForm.styles';\nimport { isValidPayment } from '../../services/validation';\nimport ALERT_MESSAGE from '../../constants/alertMessage';\n\ninterface Props {\n  handlePayment: (newPayment: number) => void;\n}\n\nconst PaymentForm: FC<Props> = ({ handlePayment }) => {\n  const [payment, setPayment] = useState(0);\n\n  const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setPayment(target.valueAsNumber);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (isValidPayment(payment)) {\n      alert(ALERT_MESSAGE.SHOULD_MORE_THAN_MINIMUM_PAYMENT);\n      return;\n    }\n\n    setPayment(0);\n    handlePayment(payment);\n  };\n\n  return (\n    <PaymentFormWrapper onSubmit={handleSubmit}>\n      <PaymentFormLabel>구입할 금액을 입력해주세요</PaymentFormLabel>\n      <Wrapper display=\"flex\">\n        <Input\n          fullWidth\n          type=\"number\"\n          onChange={handleInputChange}\n          value={payment === 0 ? '' : payment}\n          placeholder=\"구입 금액\"\n          name=\"payment-input\"\n          required\n        />\n        <Button>확인</Button>\n      </Wrapper>\n    </PaymentFormWrapper>\n  );\n};\n\nexport default PaymentForm;\n","import React, { ChangeEvent, FC } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleWrapper = styled.label`\n  z-index: 0;\n  position: relative;\n\n  .toggle-button {\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    z-index: -1;\n    position: absolute;\n    right: 6px;\n    top: -8px;\n    display: block;\n    margin: 0;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    outline: none;\n    opacity: 0;\n    transform: scale(1);\n    pointer-events: none;\n    transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;\n  }\n\n  /* Span */\n  .toggle-text {\n    display: inline-block;\n    width: 100%;\n    cursor: pointer;\n  }\n\n  /* Track */\n  .toggle-text::before {\n    content: '';\n    float: right;\n    display: inline-block;\n    margin: 5px 0 5px 10px;\n    border-radius: 7px;\n    width: 36px;\n    height: 14px;\n    background-color: rgba(0, 0, 0, 0.38);\n    vertical-align: top;\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n\n  .toggle-text::after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    right: 16px;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    background-color: white;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n      0 1px 5px 0 rgba(0, 0, 0, 0.12);\n    transition: background-color 0.2s, transform 0.2s;\n  }\n\n  .toggle-button:checked {\n    right: -10px;\n    background-color: rgb(0, 188, 212);\n  }\n\n  .toggle-button:checked + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  .toggle-button:checked + .toggle-text::after {\n    background-color: rgb(0, 188, 212);\n    transform: translateX(16px);\n  }\n\n  /* Hover, Focus */\n  &:hover > .toggle-button {\n    opacity: 0.04;\n  }\n\n  .toggle-button:focus {\n    opacity: 0.12;\n  }\n\n  &:hover > .toggle-button:focus {\n    opacity: 0.16;\n  }\n\n  .toggle-button:active {\n    opacity: 1;\n    transform: scale(0);\n    transition: transform 0s, opacity 0s;\n  }\n\n  .toggle-button:active + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  .toggle-button:checked:active + .toggle-text::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  .toggle-button:disabled {\n    opacity: 0;\n  }\n\n  .toggle-button:disabled + .toggle-text {\n    color: black;\n    opacity: 0.38;\n    cursor: default;\n  }\n\n  .toggle-button:disabled + .toggle-text::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  .toggle-button:checked:disabled + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n`;\ninterface Props {\n  onToggle: (isToggled: boolean) => void;\n}\n\nconst Toggle: FC<Props> = ({ onToggle, children }) => {\n  const handleToggle = (event: ChangeEvent<HTMLInputElement>) => {\n    onToggle(event.target.checked);\n  };\n\n  return (\n    <ToggleWrapper>\n      <input onChange={handleToggle} type=\"checkbox\" className=\"toggle-button\" />\n      <span className=\"toggle-text\">{children}</span>\n    </ToggleWrapper>\n  );\n};\n\nexport default Toggle;\n","import styled, { css } from 'styled-components';\nimport { Wrapper } from '../common/Wrapper';\n\nexport const TicketListWrapper = styled(Wrapper)`\n  margin-top: 2.25rem;\n  min-width: 400px;\n  margin-bottom: 3.5rem;\n`;\n\nexport const TicketListHeader = styled.div`\n  display: flex;\n  .ticket-list-header-label {\n    flex: 1 1 auto;\n    margin: 0 inherit;\n  }\n`;\n\ntype ListProps = {\n  isToggled: boolean;\n};\n\nconst detailedStyle = css`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul<ListProps>`\n  display: flex;\n  flex-wrap: wrap;\n  max-height: 280px;\n  overflow-x: auto;\n\n  margin-top: 1rem;\n  padding: 5px;\n  ${({ isToggled }) => isToggled && detailedStyle}\n`;\n","import styled from 'styled-components';\nimport { Wrapper } from '../../common/Wrapper';\n\nexport const TicketItemWrapper = styled(Wrapper)`\n  display: flex;\n  align-items: center;\n\n  .ticket-icon {\n    margin: 0 10px;\n    font-size: 2.25rem;\n  }\n\n  .ticket-number {\n    line-height: 3rem;\n  }\n`;\n","import { FC } from 'react';\nimport { TicketItemWrapper } from './TicketItem.styles';\n\ninterface Props {\n  ticketNumbers: number[];\n  isDetailMode: boolean;\n}\n\nconst TicketItem: FC<Props> = ({ ticketNumbers, isDetailMode }) => {\n  return (\n    <TicketItemWrapper>\n      <span className=\"ticket-icon\">🎟️ </span>\n      {isDetailMode && <span className=\"ticket-number\">{ticketNumbers.join(' ')}</span>}\n    </TicketItemWrapper>\n  );\n};\n\nexport default TicketItem;\n","import { FC, useState } from 'react';\nimport Toggle from '../common/Toggle';\nimport { TicketListHeader, TicketListWrapper, List } from './TicketList.styles';\nimport TicketItem from './TicketItem/TicketItem';\nimport { Ticket } from '../../types';\n\ninterface Props {\n  tickets: Ticket[];\n}\n\nconst TicketList: FC<Props> = ({ tickets }) => {\n  const [isToggled, setIsToggled] = useState(false);\n\n  const onToggle = (isToggled: boolean) => {\n    setIsToggled(isToggled);\n  };\n\n  return (\n    <TicketListWrapper>\n      <TicketListHeader>\n        <label className=\"ticket-list-header-label\">총 {tickets.length}개를 구매하였습니다</label>\n        <div>\n          <Toggle onToggle={onToggle}>번호보기</Toggle>\n        </div>\n      </TicketListHeader>\n      <List isToggled={isToggled}>\n        {tickets.map(ticket => (\n          <TicketItem key={ticket.id} ticketNumbers={ticket.numbers} isDetailMode={isToggled} />\n        ))}\n      </List>\n    </TicketListWrapper>\n  );\n};\n\nexport default TicketList;\n","import { FC } from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n`;\n\nconst ModalInner = styled.div`\n  transition: top 0.25s ease;\n  min-width: 480px;\n  margin: auto;\n  overflow: auto;\n  background: #fff;\n  border-radius: 5px;\n  position: relative;\n  padding: 2.5rem;\n\n  @media screen and (max-width: 768px) {\n    box-sizing: border-box;\n  }\n`;\n\nconst ModalClose = styled.div`\n  margin: 20px;\n  width: 20px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  cursor: pointer;\n\n  .close-x {\n    stroke: gray;\n    fill: transparent;\n    stroke-linecap: round;\n    stroke-width: 5;\n  }\n`;\n\ninterface Props {\n  handleModalClose: () => void;\n}\n\nconst Modal: FC<Props> = ({ handleModalClose, children }) => {\n  return (\n    <ModalWrapper>\n      <ModalInner>\n        <ModalClose onClick={handleModalClose}>\n          <svg viewBox=\"0 0 40 40\">\n            <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n          </svg>\n        </ModalClose>\n        {children}\n      </ModalInner>\n    </ModalWrapper>\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { Wrapper } from '../common/Wrapper';\n\nexport const ResultModalWrapper = styled(Wrapper)`\n  .result-header,\n  .profit {\n    text-align: center;\n  }\n`;\n\nexport const ResultTable = styled.table`\n  border-color: black;\n  border-width: 1px;\n  border-radius: 1em;\n  overflow: hidden;\n  border-collapse: collapse;\n\n  thead {\n    display: table-header-group;\n    vertical-align: middle;\n    border-color: inherit;\n  }\n\n  tr {\n    text-align: center;\n  }\n\n  th,\n  td {\n    padding: 0.75rem;\n    border-bottom: 1px solid gainsboro;\n  }\n`;\n","import { FC } from 'react';\nimport { getKRMoneyString } from '../../../utils/format';\n\ninterface Props {\n  match: number;\n  prize: number;\n  matchCount: number;\n  isBonus?: boolean;\n}\n\nconst ResultTableRow: FC<Props> = ({ match, matchCount, prize, isBonus }) => {\n  return (\n    <tr>\n      <td>\n        {match}개 {isBonus && '+ 보너스볼'}\n      </td>\n      <td>{getKRMoneyString(prize)}</td>\n      <td>{matchCount}개</td>\n    </tr>\n  );\n};\n\nexport default ResultTableRow;\n","export const getKRMoneyString = (number: number) =>\n  Number.isNaN(number) ? '' : number.toLocaleString('ko-KR');\n","export const RANK_INDEX = {\n  FIRST: 0,\n  SECOND: 1,\n  THIRD: 2,\n  FOURTH: 3,\n  FIFTH: 4,\n};\n\nexport const PRIZE = {\n  [RANK_INDEX.FIRST]: 200000000,\n  [RANK_INDEX.SECOND]: 30000000,\n  [RANK_INDEX.THIRD]: 1500000,\n  [RANK_INDEX.FOURTH]: 50000,\n  [RANK_INDEX.FIFTH]: 5000,\n};\n\nexport const MATCH = {\n  [RANK_INDEX.FIRST]: 6,\n  [RANK_INDEX.SECOND]: 5,\n  [RANK_INDEX.THIRD]: 5,\n  [RANK_INDEX.FOURTH]: 4,\n  [RANK_INDEX.FIFTH]: 3,\n};\n","import { RANK_INDEX, PRIZE } from '../constants/game';\nimport TICKET from '../constants/ticket';\nimport { Ticket, WinningNumber } from '../types';\n\nconst hasBonus = (ticketNumbers: number[], bonus: number) => {\n  return ticketNumbers.includes(bonus);\n};\n\ntype Index = {\n  3: number;\n  4: number;\n  5: number;\n  6: number;\n};\n\nconst isInIndex = (matchCount: number): matchCount is keyof Index => {\n  return matchCount >= 3 && matchCount <= 6;\n};\n\nconst getRankIndex = (ticketNumbers: number[], { numbers, bonus }: WinningNumber) => {\n  const rankIndexMap = {\n    6: RANK_INDEX.FIRST,\n    5: hasBonus(ticketNumbers, bonus) ? RANK_INDEX.SECOND : RANK_INDEX.THIRD,\n    4: RANK_INDEX.FOURTH,\n    3: RANK_INDEX.FIFTH,\n  };\n\n  const matchCount = ticketNumbers.reduce(\n    (acc, ticketNumber) => (numbers.includes(ticketNumber) ? acc + 1 : acc),\n    0\n  );\n\n  return isInIndex(matchCount) ? rankIndexMap[matchCount] : null;\n};\n\nexport const getWinnerCounts = (tickets: Ticket[], winningNumber: WinningNumber): number[] => {\n  const winnerCounts = new Array(5).fill(0);\n\n  tickets.forEach(({ numbers }) => {\n    const rankIndex = getRankIndex(numbers, winningNumber);\n\n    if (!rankIndex) return;\n\n    winnerCounts[rankIndex] += 1;\n  });\n\n  return winnerCounts;\n};\n\nexport const getTotalProfit = (payment: number, winnerCounts: number[]) => {\n  const income = winnerCounts.reduce(\n    (acc, winnerCount, index) => acc + winnerCount * PRIZE[index],\n    0\n  );\n\n  return ((income - payment) / payment) * 100;\n};\n\nexport const computeResult = (tickets: Ticket[], winningNumber: WinningNumber) => {\n  const payment = tickets.length * TICKET.PRICE;\n  const winnerCounts = getWinnerCounts(tickets, winningNumber);\n  const profit = getTotalProfit(payment, winnerCounts);\n\n  return { winnerCounts, profit };\n};\n","import { FC } from 'react';\nimport Modal from '../common/Modal';\nimport Button from '../common/Button';\nimport { Wrapper } from '../common/Wrapper';\nimport { ResultModalWrapper, ResultTable } from './ResultModal.styles';\nimport ResultTableRow from './ResultTableRow/ResultTableRow';\nimport { computeResult } from '../../services/game';\nimport { MATCH, PRIZE, RANK_INDEX } from '../../constants/game';\nimport { Ticket, WinningNumber } from '../../types';\n\ninterface Props {\n  handleModalClose: () => void;\n  resetGame: () => void;\n  tickets: Ticket[];\n  winningNumber: WinningNumber;\n}\n\nconst ResultModal: FC<Props> = ({ handleModalClose, resetGame, tickets, winningNumber }) => {\n  const { FIRST, SECOND, THIRD, FOURTH, FIFTH } = RANK_INDEX;\n  const { winnerCounts, profit } = computeResult(tickets, winningNumber);\n\n  return (\n    <Modal handleModalClose={handleModalClose}>\n      <ResultModalWrapper>\n        <h2 className=\"result-header\">🏆 당첨 통계 🏆</h2>\n        <Wrapper display=\"flex\">\n          <ResultTable>\n            <thead>\n              <tr>\n                <th>일치 갯수</th>\n                <th>당첨금</th>\n                <th>당첨 갯수</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[FIFTH, FOURTH, THIRD, SECOND, FIRST].map((rank, index) => (\n                <ResultTableRow\n                  key={index}\n                  match={MATCH[rank]}\n                  prize={PRIZE[rank]}\n                  isBonus={rank === SECOND}\n                  matchCount={winnerCounts[rank]}\n                />\n              ))}\n            </tbody>\n          </ResultTable>\n        </Wrapper>\n        <p className=\"profit\">수익률은 {profit}% 입니다.</p>\n        <Wrapper display=\"flex\">\n          <Button type=\"reset\" fullWidth onClick={resetGame}>\n            다시 시작하기\n          </Button>\n        </Wrapper>\n      </ResultModalWrapper>\n    </Modal>\n  );\n};\n\nexport default ResultModal;\n","import styled from 'styled-components';\n\nexport const WinningNumberFormWrapper = styled.form`\n  .input-label {\n    display: inline-block;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 1.25rem;\n  }\n\n  .input-caption {\n    margin-top: 0;\n    margin-bottom: 0.75rem;\n    text-align: center;\n  }\n\n  .winning-number-input-wrapper {\n    margin-bottom: 1rem;\n  }\n`;\n","import { ChangeEvent, FC, FormEvent, RefObject, useState } from 'react';\nimport { WinningNumberFormWrapper } from './WinningNumberForm.styles';\nimport Input from '../common/Input';\nimport { Wrapper } from '../common/Wrapper';\nimport Button from '../common/Button';\nimport { isValidWinningNumber, isWinningNumberDuplicated } from '../../services/validation';\nimport ALERT_MESSAGE from '../../constants/alertMessage';\nimport { WinningNumber } from '../../types';\n\ninterface Props {\n  formRef: RefObject<HTMLFormElement>;\n  handleWinningNumber: (winningNumber: WinningNumber) => void;\n}\n\ninterface SetMap {\n  first: (value: number) => void;\n  second: (value: number) => void;\n  third: (value: number) => void;\n  fourth: (value: number) => void;\n  fifth: (value: number) => void;\n  sixth: (value: number) => void;\n  bonus: (value: number) => void;\n}\n\nconst isInSetMap = (name: string, setMap: SetMap): name is keyof SetMap => {\n  return Object.keys(setMap).includes(name);\n};\n\nconst WinningNumberForm: FC<Props> = ({ formRef, handleWinningNumber }) => {\n  const [first, setFirst] = useState(0);\n  const [second, setSecond] = useState(0);\n  const [third, setThird] = useState(0);\n  const [fourth, setFourth] = useState(0);\n  const [fifth, setFifth] = useState(0);\n  const [sixth, setSixth] = useState(0);\n  const [bonus, setBonus] = useState(0);\n\n  const setMap: SetMap = {\n    first: (value: number) => setFirst(value),\n    second: (value: number) => setSecond(value),\n    third: (value: number) => setThird(value),\n    fourth: (value: number) => setFourth(value),\n    fifth: (value: number) => setFifth(value),\n    sixth: (value: number) => setSixth(value),\n    bonus: (value: number) => setBonus(value),\n  };\n\n  const handleWinningNumberInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, valueAsNumber: value } = event.target;\n\n    if (!isValidWinningNumber(value)) {\n      alert(ALERT_MESSAGE.NUMBER_RANGE_EXCEEDED);\n      event.target.value = '';\n      if (isInSetMap(name, setMap)) setMap[name](0);\n      return;\n    }\n\n    if (isInSetMap(name, setMap)) setMap[name](value);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const winningNumber = {\n      numbers: [first, second, third, fourth, fifth, sixth],\n      bonus,\n    };\n\n    if (isWinningNumberDuplicated(winningNumber)) {\n      alert(ALERT_MESSAGE.DUPLICATED_NUMBER_EXIST);\n      return;\n    }\n\n    handleWinningNumber(winningNumber);\n  };\n\n  return (\n    <WinningNumberFormWrapper onSubmit={handleSubmit} ref={formRef}>\n      <label className=\"input-label\">당첨번호 6개와 보너스 넘버 1개를 입력해주세요.</label>\n      <Wrapper className=\"winning-number-input-wrapper\" display=\"flex\">\n        <div>\n          <h4 className=\"input-caption\">당첨 번호</h4>\n          <Wrapper display=\"flex\" onChange={handleWinningNumberInputChange}>\n            {['first', 'second', 'third', 'fourth', 'fifth', 'sixth'].map((el, idx) => (\n              <Input key={idx} type=\"number\" name={el} required />\n            ))}\n          </Wrapper>\n        </div>\n        <div>\n          <h4 className=\"input-caption\">보너스 번호</h4>\n          <Wrapper display=\"flex\" onChange={handleWinningNumberInputChange}>\n            <Input type=\"number\" name=\"bonus\" required />\n          </Wrapper>\n        </div>\n      </Wrapper>\n      <Button fullWidth>결과 확인하기</Button>\n    </WinningNumberFormWrapper>\n  );\n};\n\nexport default WinningNumberForm;\n","import styled from 'styled-components';\nimport { Wrapper } from './components/common/Wrapper';\n\nexport const AppWrapper = styled(Wrapper)`\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  min-height: 800px;\n  width: 400px;\n  margin: 0 auto;\n\n  .app-title {\n    text-align: center;\n    margin-bottom: 3.5rem;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport TICKET from '../constants/ticket';\nimport { Ticket } from '../types';\nimport { getRandomNumber } from '../utils/random';\n\nconst generateTicket = (): Ticket => {\n  const ticketNumbers = new Set<number>();\n  while (ticketNumbers.size < TICKET.NUMBER_LIST_LENGTH) {\n    ticketNumbers.add(getRandomNumber(TICKET.MIN_NUMBER, TICKET.MAX_NUMBER));\n  }\n\n  return { id: nanoid(), numbers: [...ticketNumbers] };\n};\n\nexport const issueTickets = (payment: number): Ticket[] => {\n  const ticketCount = Math.floor(payment / TICKET.PRICE);\n\n  return [...Array(ticketCount)].map(() => generateTicket());\n};\n","export const getRandomNumber = (min: number, max: number): number => {\n  return Math.floor(Math.random() * max + min);\n};\n","export const getRemainedTime = () => {\n  const ANNOUNCEMENT_HOURS = 20;\n  const ANNOUNCEMENT_MINUTES = 45;\n  const SATURDAY = 6;\n  const announcementDate = new Date();\n\n  announcementDate.setDate(\n    announcementDate.getDate() + Math.abs(SATURDAY - announcementDate.getDay())\n  );\n  announcementDate.setHours(ANNOUNCEMENT_HOURS);\n  announcementDate.setMinutes(ANNOUNCEMENT_MINUTES);\n  announcementDate.setSeconds(0);\n\n  return announcementDate.getTime() - Date.now();\n};\n\nexport const getDate = (time: number) => Math.floor(time / (1000 * 60 * 60 * 24));\nexport const getHours = (time: number) =>\n  Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\nexport const getMinutes = (time: number) => Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\nexport const getSeconds = (time: number) => Math.floor((time % (1000 * 60)) / 1000);\n","import { Wrapper } from '../common/Wrapper';\nimport styled from 'styled-components';\n\nexport const RemainedTimeWrapper = styled(Wrapper)`\n  .remain-time-text {\n    font-size: 1.5rem;\n    text-align: center;\n    font-weight: bold;\n    margin: 12px 0px 8px 0px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { getDate, getHours, getMinutes, getRemainedTime, getSeconds } from '../../utils/date';\nimport { RemainedTimeWrapper } from './RemainedTime.styles';\n\nconst RemainedTime = () => {\n  const [remainTime, setRemainTime] = useState(0);\n\n  const remainTimerId = setInterval(() => {\n    setRemainTime(getRemainedTime());\n  }, 1000);\n\n  useEffect(() => clearInterval(remainTimerId));\n\n  return (\n    <RemainedTimeWrapper>\n      <p className=\"remain-time-text\">\n        당첨발표까지 {getDate(remainTime)}일 {getHours(remainTime)}시 {getMinutes(remainTime)}분{' '}\n        {getSeconds(remainTime)}초 남았습니다.\n      </p>\n    </RemainedTimeWrapper>\n  );\n};\n\nexport default RemainedTime;\n","import { createRef, RefObject, useState } from 'react';\nimport PaymentForm from './components/PaymentForm/PaymentForm';\nimport TicketList from './components/TicketList/TicketList';\nimport ResultModal from './components/ResultModal/ResultModal';\nimport WinningNumberForm from './components/WinningNumberForm/WinningNumberForm';\nimport { AppWrapper } from './App.styles';\nimport { issueTickets } from './services/tickets';\nimport RemainedTime from './components/RemainedTime/RemainedTime';\nimport { Ticket, WinningNumber } from './types';\n\nconst App = () => {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [winningNumber, setWinningNumber] = useState<WinningNumber>({\n    numbers: [],\n    bonus: 0,\n  });\n\n  const winningNumberFormRef: RefObject<HTMLFormElement> = createRef();\n\n  const handlePayment = (payment: number) => {\n    setTickets(issueTickets(payment));\n  };\n\n  const handleWinningNumber = (winningNumber: WinningNumber) => {\n    setWinningNumber(winningNumber);\n    setIsModalOpen(true);\n  };\n\n  const resetStates = () => {\n    setTickets([]);\n    setWinningNumber({\n      numbers: [],\n      bonus: 0,\n    });\n    setIsModalOpen(false);\n  };\n\n  const resetGame = () => {\n    resetStates();\n    winningNumberFormRef.current?.reset();\n  };\n\n  return (\n    <AppWrapper display=\"flex\">\n      <h1 className=\"app-title\">🎱 행운의 로또</h1>\n      <PaymentForm handlePayment={handlePayment} />\n      {!!tickets.length && (\n        <>\n          <TicketList tickets={tickets} />\n          <RemainedTime />\n          <WinningNumberForm\n            handleWinningNumber={handleWinningNumber}\n            formRef={winningNumberFormRef}\n          />\n        </>\n      )}\n\n      {isModalOpen && (\n        <ResultModal\n          handleModalClose={() => setIsModalOpen(false)}\n          resetGame={resetGame}\n          tickets={tickets}\n          winningNumber={winningNumber}\n        />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalStyle from './Global.styles';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}