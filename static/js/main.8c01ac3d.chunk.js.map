{"version":3,"sources":["Global.styles.ts","components/common/Button.tsx","components/common/Input.tsx","components/common/Wrapper.tsx","components/PaymentForm/PaymentForm.styles.tsx","constants/ticket.ts","constants/alertMessage.ts","utils/validation.ts","components/PaymentForm/PaymentForm.tsx","services/validation.ts","components/common/Toggle.tsx","components/TicketList/TicketList.styles.tsx","components/TicketList/TicketItem/TicketItem.styles.tsx","components/TicketList/TicketItem/TicketItem.tsx","components/TicketList/TicketList.tsx","components/common/Modal.tsx","components/ResultModal/ResultModal.styles.tsx","utils/format.ts","components/ResultModal/ResultTableRow/ResultTableRow.tsx","constants/game.ts","services/game.ts","components/ResultModal/ResultModal.tsx","components/WinningNumberForm/WinningNumberForm.styles.tsx","components/WinningNumberForm/WinningNumberForm.tsx","App.styles.ts","services/tickets.ts","utils/random.ts","utils/date.ts","components/RemainedTime/RemainedTime.styles.tsx","components/RemainedTime/RemainedTime.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","normalize","Button","styled","button","fullWidth","Input","input","flexCenter","css","Wrapper","div","display","PaymentFormWrapper","form","PaymentFormLabel","label","TICKET","Object","freeze","NUMBER_LIST_LENGTH","CORRECT_NUMBER_LENGTH","PRICE","MIN_NUMBER","MAX_NUMBER","ALERT_MESSAGE","SHOULD_BUY_TICKET","SHOULD_MORE_THAN_MINIMUM_PAYMENT","SHOULD_INPUT_ALL_NUMBERS","DUPLICATED_NUMBER_EXIST","NUMBER_RANGE_EXCEEDED","hasDuplicateElement","array","Set","size","length","PaymentForm","props","state","payment","handleInputChange","bind","handleSubmit","event","this","setState","target","valueAsNumber","preventDefault","alert","alertByPaymentCase","handlePayment","onSubmit","type","onChange","value","placeholder","name","required","Component","ToggleWrapper","Toggle","handleToggle","onToggle","checked","className","children","TicketListWrapper","TicketListHeader","detailedStyle","List","ul","isToggled","TicketItemWrapper","TicketItem","isDetailMode","ticketNumbers","join","TicketList","tickets","map","ticket","numbers","id","ModalWrapper","ModalInner","ModalClose","Modal","onClick","handleModalClose","viewBox","d","ResultModalWrapper","ResultTable","table","getKRMoneyString","number","Number","isNaN","toLocaleString","ResultTableRow","match","isBonus","matchCount","prize","RANK_INDEX","PRIZE","MATCH","hasBonus","bonus","includes","getWinnerCounts","winningNumber","winnerCounts","Array","fill","forEach","rankIndex","6","5","4","3","reduce","acc","ticketNumber","getRankIndex","undefined","ResultModal","computeResult","profit","winnerCount","index","getTotalProfit","resetGame","firstWinnerCount","secondWinnerCount","thirdWinnerCount","fourthWinnerCount","fifthWinnerCount","WinningNumberFormWrapper","WinningNumberForm","first","second","third","fourth","fifth","sixth","handleWinningNumberInputChange","alertByWinningNumberCase","isWinningNumberDuplicated","handleWinningNumber","alertByWinningNumbersCase","ref","formRef","AppWrapper","issueTickets","ticketCount","Math","floor","min","max","add","random","nanoid","generateTicket","getRemainedTime","nowDate","Date","announcementDate","getFullYear","getMonth","getDate","setDate","abs","getDay","getTime","RemainedTimeWrapper","RemainedTime","date","remainTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","App","winningNumberFormRef","remainTimer","React","createRef","isModalOpen","handleModal","handleRemainedTime","setInterval","isOpen","current","reset","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c01ac3d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n  html,\n  body,\n  ul {\n    margin: 0;\n    height: 100%;\n    font-size: 16px;\n    padding: 0;\n  }\n   \n  svg {\n    display: block;\n  }\n\n  * {\n    box-sizing: border-box;    \n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\ntype ButtonProps = {\n  fullWidth?: boolean;\n};\n\nconst Button = styled.button<ButtonProps>`\n  background-color: #00bcd4;\n  height: 36px;\n  min-width: 64px;\n  padding: 0 16px;\n  border-radius: 4px;\n  outline: 0;\n  border-style: none;\n  cursor: pointer;\n  font-size: 0.8rem;\n  width: ${({ fullWidth }) => fullWidth && '100%'};\n\n  &:hover {\n    background-color: #018c9e;\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\ntype InputProps = {\n  fullWidth?: boolean;\n};\n\nconst Input = styled.input<InputProps>`\n  padding: 0.5rem;\n  margin: 0 0.25rem;\n\n  width: ${({ fullWidth }) => (fullWidth ? '100%' : '38px')};\n  height: 36px;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport default Input;\n","import styled, { css } from 'styled-components';\n\ntype WrapperProps = {\n  display?: 'block' | 'flex' | 'inline-block';\n};\n\nconst flexCenter = css`\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Wrapper = styled.div<WrapperProps>`\n  display: ${({ display }) => display || 'block'};\n  ${({ display }) => display === 'flex' && flexCenter}\n`;\n","import styled from 'styled-components';\n\nexport const PaymentFormWrapper = styled.form`\n  width: 100%;\n`;\n\nexport const PaymentFormLabel = styled.label`\n  display: inline-block;\n  margin-bottom: 20px;\n`;\n","const TICKET = Object.freeze({\n  NUMBER_LIST_LENGTH: 6,\n  CORRECT_NUMBER_LENGTH: 7,\n  PRICE: 1000,\n  MIN_NUMBER: 1,\n  MAX_NUMBER: 45,\n});\n\nexport default TICKET;\n","import TICKET from './ticket';\n\nconst ALERT_MESSAGE = Object.freeze({\n  SHOULD_BUY_TICKET: '티켓을 구매하지 않았습니다. 티켓을 구매해주세요!',\n  SHOULD_MORE_THAN_MINIMUM_PAYMENT: `구입 금액은 최소 ${TICKET.PRICE}원 이상이여야 합니다.`,\n  SHOULD_INPUT_ALL_NUMBERS: '모든 번호를 입력해주셔야 결과를 확인할 수 있습니다.',\n  DUPLICATED_NUMBER_EXIST: '번호들 중 중복된 숫자가 존재합니다.',\n  NUMBER_RANGE_EXCEEDED: `${TICKET.MIN_NUMBER} ~ ${TICKET.MAX_NUMBER} 사이의 숫자들만 번호로 입력해주세요`,\n});\n\nexport default ALERT_MESSAGE;\n","export const hasDuplicateElement = <T>(array: T[]): boolean => {\n  return new Set(array).size !== array.length;\n};\n","import React, { Component, ChangeEvent, FormEvent } from 'react';\nimport Button from '../common/Button';\nimport Input from '../common/Input';\nimport { Wrapper } from '../common/Wrapper';\nimport { PaymentFormWrapper, PaymentFormLabel } from './PaymentForm.styles';\nimport { alertByPaymentCase, isValidPayment } from '../../services/validation';\n\ntype Props = {\n  handlePayment: (newPayment: number) => void;\n};\n\ntype State = {\n  payment: number;\n};\n\nexport default class PaymentForm extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      payment: 0,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      payment: event.target.valueAsNumber,\n    });\n  }\n\n  handleSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isValidPayment(this.state.payment)) {\n      alertByPaymentCase(this.state.payment);\n      return;\n    }\n\n    this.setState({\n      payment: 0,\n    });\n    this.props.handlePayment(this.state.payment);\n  }\n\n  render() {\n    return (\n      <PaymentFormWrapper onSubmit={this.handleSubmit}>\n        <PaymentFormLabel>구입할 금액을 입력해주세요</PaymentFormLabel>\n        <Wrapper display=\"flex\">\n          <Input\n            fullWidth\n            type=\"number\"\n            onChange={this.handleInputChange}\n            value={this.state.payment === 0 ? '' : this.state.payment}\n            placeholder=\"구입 금액\"\n            name=\"payment-input\"\n            required\n          />\n          <Button>확인</Button>\n        </Wrapper>\n      </PaymentFormWrapper>\n    );\n  }\n}\n","import ALERT_MESSAGE from '../constants/alertMessage';\nimport TICKET from '../constants/ticket';\nimport { hasDuplicateElement } from '../utils/validation';\n\nexport const isValidPayment = (payment: number) => payment < TICKET.PRICE;\n\nexport const alertByPaymentCase = (payment: number) => {\n  if (payment < TICKET.PRICE) {\n    alert(ALERT_MESSAGE.SHOULD_MORE_THAN_MINIMUM_PAYMENT);\n  }\n};\n\nexport const isValidWinningNumber = (winningNumber: number): boolean => {\n  return winningNumber >= TICKET.MIN_NUMBER && winningNumber <= TICKET.MAX_NUMBER;\n};\n\nexport const alertByWinningNumberCase = (winningNumber: number): void => {\n  if (winningNumber < TICKET.MIN_NUMBER || winningNumber > TICKET.MAX_NUMBER) {\n    alert(ALERT_MESSAGE.NUMBER_RANGE_EXCEEDED);\n  }\n};\n\nexport const isWinningNumberDuplicated = ({ numbers, bonus }: WinningNumber): boolean => {\n  return hasDuplicateElement<number>([...numbers, bonus]);\n};\n\nexport const alertByWinningNumbersCase = ({ numbers, bonus }: WinningNumber): void => {\n  if (!hasDuplicateElement<number>([...numbers, bonus])) {\n    alert(ALERT_MESSAGE.DUPLICATED_NUMBER_EXIST);\n  }\n};\n\n//TODO: answer Submit에서 alert 한번, 이후 handlewinndingNumber에서 alert 또 한번이 과연 맞는건가?\n// 역할로써는 분리가 맞는데, 두번의 alert는 좀...\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleWrapper = styled.label`\n  z-index: 0;\n  position: relative;\n\n  .toggle-button {\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    z-index: -1;\n    position: absolute;\n    right: 6px;\n    top: -8px;\n    display: block;\n    margin: 0;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    outline: none;\n    opacity: 0;\n    transform: scale(1);\n    pointer-events: none;\n    transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;\n  }\n\n  /* Span */\n  .toggle-text {\n    display: inline-block;\n    width: 100%;\n    cursor: pointer;\n  }\n\n  /* Track */\n  .toggle-text::before {\n    content: '';\n    float: right;\n    display: inline-block;\n    margin: 5px 0 5px 10px;\n    border-radius: 7px;\n    width: 36px;\n    height: 14px;\n    background-color: rgba(0, 0, 0, 0.38);\n    vertical-align: top;\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n\n  .toggle-text::after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    right: 16px;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    background-color: white;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n      0 1px 5px 0 rgba(0, 0, 0, 0.12);\n    transition: background-color 0.2s, transform 0.2s;\n  }\n\n  .toggle-button:checked {\n    right: -10px;\n    background-color: rgb(0, 188, 212);\n  }\n\n  .toggle-button:checked + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  .toggle-button:checked + .toggle-text::after {\n    background-color: rgb(0, 188, 212);\n    transform: translateX(16px);\n  }\n\n  /* Hover, Focus */\n  &:hover > .toggle-button {\n    opacity: 0.04;\n  }\n\n  .toggle-button:focus {\n    opacity: 0.12;\n  }\n\n  &:hover > .toggle-button:focus {\n    opacity: 0.16;\n  }\n\n  .toggle-button:active {\n    opacity: 1;\n    transform: scale(0);\n    transition: transform 0s, opacity 0s;\n  }\n\n  .toggle-button:active + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  .toggle-button:checked:active + .toggle-text::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  .toggle-button:disabled {\n    opacity: 0;\n  }\n\n  .toggle-button:disabled + .toggle-text {\n    color: black;\n    opacity: 0.38;\n    cursor: default;\n  }\n\n  .toggle-button:disabled + .toggle-text::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  .toggle-button:checked:disabled + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n`;\n\ntype Props = {\n  onToggle: (isToggled: boolean) => void;\n};\n\nexport default class Toggle extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onToggle(event.target.checked);\n  }\n\n  render() {\n    return (\n      <ToggleWrapper>\n        <input onChange={this.handleToggle} type=\"checkbox\" className=\"toggle-button\" />\n        <span className=\"toggle-text\">{this.props.children}</span>\n      </ToggleWrapper>\n    );\n  }\n}\n","import styled, { css } from 'styled-components';\nimport { Wrapper } from '../common/Wrapper';\n\nexport const TicketListWrapper = styled(Wrapper)`\n  margin-top: 2.25rem;\n  min-width: 400px;\n  margin-bottom: 3.5rem;\n`;\n\nexport const TicketListHeader = styled.div`\n  display: flex;\n  .ticket-list-header-label {\n    flex: 1 1 auto;\n    margin: 0 inherit;\n  }\n`;\n\ntype ListProps = {\n  isToggled: boolean;\n};\n\nconst detailedStyle = css`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul<ListProps>`\n  display: flex;\n  flex-wrap: wrap;\n  max-height: 280px;\n  overflow-x: auto;\n\n  margin-top: 1rem;\n  padding: 5px;\n  ${({ isToggled }) => isToggled && detailedStyle}\n`;\n","import styled from 'styled-components';\nimport { Wrapper } from '../../common/Wrapper';\n\nexport const TicketItemWrapper = styled(Wrapper)`\n  display: flex;\n  align-items: center;\n\n  .ticket-icon {\n    margin: 0 10px;\n    font-size: 2.25rem;\n  }\n\n  .ticket-number {\n    line-height: 3rem;\n  }\n`;\n","import React, { Component } from 'react';\nimport { TicketItemWrapper } from './TicketItem.styles';\n\ntype Props = {\n  ticketNumbers: number[];\n  isDetailMode: boolean;\n};\n\nexport default class TicketItem extends Component<Props> {\n  render() {\n    return (\n      <TicketItemWrapper>\n        <span className=\"ticket-icon\">🎟️ </span>\n        {this.props.isDetailMode && (\n          <span className=\"ticket-number\">{this.props.ticketNumbers.join(' ')}</span>\n        )}\n      </TicketItemWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Toggle from '../common/Toggle';\nimport { TicketListHeader, TicketListWrapper, List } from './TicketList.styles';\nimport TicketItem from './TicketItem/TicketItem';\n\ntype Props = {\n  tickets: Ticket[];\n};\n\ntype State = {\n  isToggled: boolean;\n};\n\nexport default class TicketList extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isToggled: false,\n    };\n\n    this.onToggle = this.onToggle.bind(this);\n  }\n\n  onToggle(isToggled: boolean) {\n    this.setState(state => ({ isToggled }));\n  }\n\n  render() {\n    const { isToggled } = this.state;\n    const { tickets } = this.props;\n\n    return (\n      <TicketListWrapper>\n        <TicketListHeader>\n          <label className=\"ticket-list-header-label\">총 {tickets.length}개를 구매하였습니다</label>\n          <div>\n            <Toggle onToggle={this.onToggle}>번호보기</Toggle>\n          </div>\n        </TicketListHeader>\n        <List isToggled={isToggled}>\n          {tickets.map(ticket => {\n            return (\n              <TicketItem key={ticket.id} ticketNumbers={ticket.numbers} isDetailMode={isToggled} />\n            );\n          })}\n        </List>\n      </TicketListWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n  z-index: 2;\n`;\n\nconst ModalInner = styled.div`\n  transition: top 0.25s ease;\n  min-width: 480px;\n  margin: auto;\n  overflow: auto;\n  background: #fff;\n  border-radius: 5px;\n  position: relative;\n  padding: 2.5rem;\n\n  @media screen and (max-width: 768px) {\n    box-sizing: border-box;\n  }\n`;\n\nconst ModalClose = styled.div`\n  margin: 20px;\n  width: 20px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  cursor: pointer;\n\n  .close-x {\n    stroke: gray;\n    fill: transparent;\n    stroke-linecap: round;\n    stroke-width: 5;\n  }\n`;\n\ntype ModalProps = {\n  handleModalClose: () => void;\n};\n\nexport default class Modal extends Component<ModalProps> {\n  render() {\n    return (\n      <ModalWrapper>\n        <ModalInner>\n          <ModalClose onClick={this.props.handleModalClose}>\n            <svg viewBox=\"0 0 40 40\">\n              <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </ModalClose>\n          {this.props.children}\n        </ModalInner>\n      </ModalWrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport Modal from '../common/Modal';\nimport { Wrapper } from '../common/Wrapper';\n\nexport const ResultModalWrapper = styled(Wrapper)`\n  .result-header,\n  .profit {\n    text-align: center;\n  }\n`;\n\nexport const ResultTable = styled.table`\n  border-color: black;\n  border-width: 1px;\n  border-radius: 1em;\n  overflow: hidden;\n  border-collapse: collapse;\n\n  thead {\n    display: table-header-group;\n    vertical-align: middle;\n    border-color: inherit;\n  }\n\n  tr {\n    text-align: center;\n  }\n\n  th,\n  td {\n    padding: 0.75rem;\n    border-bottom: 1px solid gainsboro;\n  }\n`;\n","export const getKRMoneyString = (number: number) => {\n  if (Number.isNaN(number)) return;\n\n  return number.toLocaleString('ko-KR');\n};\n","import React, { Component } from 'react';\nimport { getKRMoneyString } from '../../../utils/format';\n\ntype ResultTableRowProps = {\n  match: number;\n  prize: number;\n  matchCount: number;\n  isBonus?: boolean;\n};\n\nexport default class ResultTableRow extends Component<ResultTableRowProps> {\n  render() {\n    const { match, isBonus, matchCount, prize } = this.props;\n\n    return (\n      <tr>\n        <td>\n          {match}개 {isBonus && '+ 보너스볼'}\n        </td>\n        <td>{getKRMoneyString(prize)}</td>\n        <td>{matchCount}개</td>\n      </tr>\n    );\n  }\n}\n","export const RANK_INDEX = {\n  FIRST: 0,\n  SECOND: 1,\n  THIRD: 2,\n  FOURTH: 3,\n  FIFTH: 4,\n};\n\nexport const PRIZE = {\n  [RANK_INDEX.FIRST]: 200000000,\n  [RANK_INDEX.SECOND]: 30000000,\n  [RANK_INDEX.THIRD]: 1500000,\n  [RANK_INDEX.FOURTH]: 50000,\n  [RANK_INDEX.FIFTH]: 5000,\n};\n\nexport const MATCH = {\n  [RANK_INDEX.FIRST]: 6,\n  [RANK_INDEX.SECOND]: 5,\n  [RANK_INDEX.THIRD]: 5,\n  [RANK_INDEX.FOURTH]: 4,\n  [RANK_INDEX.FIFTH]: 3,\n};\n","import { RANK_INDEX, MATCH, PRIZE } from '../constants/game';\n\nconst hasBonus = (ticketNumbers: number[], bonus: number): boolean => {\n  return ticketNumbers.includes(bonus);\n};\n\ntype Index = {\n  [key: number]: number;\n};\n\nconst getRankIndex = (\n  ticketNumbers: number[],\n  { numbers, bonus }: WinningNumber\n): number | undefined => {\n  const rankIndexMap: Index = {\n    6: RANK_INDEX.FIRST,\n    5: hasBonus(ticketNumbers, bonus) ? RANK_INDEX.SECOND : RANK_INDEX.THIRD,\n    4: RANK_INDEX.FOURTH,\n    3: RANK_INDEX.FIFTH,\n  };\n\n  const matchCount = ticketNumbers.reduce(\n    (acc, ticketNumber) => (numbers.includes(ticketNumber) ? acc + 1 : acc),\n    0\n  );\n\n  return rankIndexMap[matchCount];\n};\n\nexport const getWinnerCounts = (tickets: Ticket[], winningNumber: WinningNumber): number[] => {\n  const winnerCounts = new Array(5).fill(0);\n\n  tickets.forEach(({ numbers }) => {\n    const rankIndex = getRankIndex(numbers, winningNumber);\n\n    if (rankIndex === undefined) return;\n\n    winnerCounts[rankIndex] += 1;\n  });\n\n  return winnerCounts;\n};\n\nexport const getTotalProfit = (payment: number, winnerCounts: number[]) => {\n  const income = winnerCounts.reduce(\n    (acc, winnerCount, index) => acc + winnerCount * PRIZE[index],\n    0\n  );\n\n  return ((income - payment) / payment) * 100;\n};\n\nexport const GREENWICH_MILLISECONDS = 1000 * 60 * 60 * 33;\n","import React, { Component } from 'react';\nimport Modal from '../common/Modal';\nimport Button from '../common/Button';\nimport { Wrapper } from '../common/Wrapper';\nimport { ResultModalWrapper, ResultTable } from './ResultModal.styles';\nimport ResultTableRow from './ResultTableRow/ResultTableRow';\nimport { getTotalProfit, getWinnerCounts } from '../../services/game';\nimport TICKET from '../../constants/ticket';\nimport { MATCH, PRIZE, RANK_INDEX } from '../../constants/game';\n\ntype Props = {\n  handleModalClose: () => void;\n  resetGame: () => void;\n  tickets: Ticket[];\n  winningNumber: WinningNumber;\n};\n\nexport default class ResultModal extends Component<Props> {\n  componentDidMount() {\n    this.computeResult();\n  }\n\n  computeResult(): { winnerCounts: number[]; profit: number } {\n    const { tickets, winningNumber } = this.props;\n    const payment = tickets.length * TICKET.PRICE;\n    const winnerCounts = getWinnerCounts(tickets, winningNumber);\n    const profit = getTotalProfit(payment, winnerCounts);\n\n    return { winnerCounts, profit };\n  }\n\n  render() {\n    const { handleModalClose, resetGame } = this.props;\n    const {\n      winnerCounts: [\n        firstWinnerCount,\n        secondWinnerCount,\n        thirdWinnerCount,\n        fourthWinnerCount,\n        fifthWinnerCount,\n      ],\n      profit,\n    } = this.computeResult();\n\n    return (\n      <Modal handleModalClose={handleModalClose}>\n        <ResultModalWrapper>\n          <h2 className=\"result-header\">🏆 당첨 통계 🏆</h2>\n          <Wrapper display=\"flex\">\n            <ResultTable>\n              <thead>\n                <tr>\n                  <th>일치 갯수</th>\n                  <th>당첨금</th>\n                  <th>당첨 갯수</th>\n                </tr>\n              </thead>\n              <tbody>\n                <ResultTableRow\n                  match={MATCH[RANK_INDEX.FIFTH]}\n                  prize={PRIZE[RANK_INDEX.FIFTH]}\n                  matchCount={fifthWinnerCount}\n                />\n                <ResultTableRow\n                  match={MATCH[RANK_INDEX.FOURTH]}\n                  prize={PRIZE[RANK_INDEX.FOURTH]}\n                  matchCount={fourthWinnerCount}\n                />\n                <ResultTableRow\n                  match={MATCH[RANK_INDEX.THIRD]}\n                  prize={PRIZE[RANK_INDEX.THIRD]}\n                  matchCount={thirdWinnerCount}\n                />\n                <ResultTableRow\n                  isBonus\n                  match={MATCH[RANK_INDEX.SECOND]}\n                  prize={PRIZE[RANK_INDEX.SECOND]}\n                  matchCount={secondWinnerCount}\n                />\n                <ResultTableRow\n                  match={MATCH[RANK_INDEX.FIRST]}\n                  prize={PRIZE[RANK_INDEX.FIRST]}\n                  matchCount={firstWinnerCount}\n                />\n              </tbody>\n            </ResultTable>\n          </Wrapper>\n          <p className=\"profit\">수익률은 {profit}% 입니다.</p>\n          <Wrapper display=\"flex\">\n            <Button type=\"reset\" fullWidth onClick={resetGame}>\n              다시 시작하기\n            </Button>\n          </Wrapper>\n        </ResultModalWrapper>\n      </Modal>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const WinningNumberFormWrapper = styled.form`\n  .input-label {\n    display: inline-block;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 1.25rem;\n  }\n\n  .input-caption {\n    margin-top: 0;\n    margin-bottom: 0.75rem;\n    text-align: center;\n  }\n\n  .winning-number-input-wrapper {\n    margin-bottom: 1rem;\n  }\n`;\n","import React, { Component } from 'react';\nimport { WinningNumberFormWrapper } from './WinningNumberForm.styles';\nimport Input from '../common/Input';\nimport { Wrapper } from '../common/Wrapper';\nimport Button from '../common/Button';\nimport {\n  isValidWinningNumber,\n  alertByWinningNumberCase,\n  isWinningNumberDuplicated,\n  alertByWinningNumbersCase,\n} from '../../services/validation';\n\ntype Props = {\n  formRef: React.RefObject<HTMLFormElement>;\n  handleWinningNumber: (winningNumber: WinningNumber) => void;\n};\n\ntype State = {\n  [key: string]: number;\n};\n\nexport default class WinningNumberForm extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      first: 0,\n      second: 0,\n      third: 0,\n      fourth: 0,\n      fifth: 0,\n      sixth: 0,\n      bonus: 0,\n    };\n\n    this.handleWinningNumberInputChange = this.handleWinningNumberInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleWinningNumberInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { name, valueAsNumber: value } = event.target;\n\n    if (!isValidWinningNumber(value)) {\n      alertByWinningNumberCase(value);\n      event.target.value = '';\n      this.setState({ [name]: 0 });\n      return;\n    }\n\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    const { first, second, third, fourth, fifth, sixth, bonus } = this.state;\n    const winningNumber = {\n      numbers: [first, second, third, fourth, fifth, sixth],\n      bonus,\n    };\n\n    if (isWinningNumberDuplicated(winningNumber)) {\n      alertByWinningNumbersCase(winningNumber);\n      return;\n    }\n\n    this.props.handleWinningNumber(winningNumber);\n  }\n\n  render() {\n    return (\n      <WinningNumberFormWrapper onSubmit={this.handleSubmit} ref={this.props.formRef}>\n        <label className=\"input-label\">당첨번호 6개와 보너스 넘버 1개를 입력해주세요.</label>\n        <Wrapper className=\"winning-number-input-wrapper\" display=\"flex\">\n          <div>\n            <h4 className=\"input-caption\">당첨 번호</h4>\n            <Wrapper display=\"flex\" onChange={this.handleWinningNumberInputChange}>\n              <Input type=\"number\" name=\"first\" required />\n              <Input type=\"number\" name=\"second\" required />\n              <Input type=\"number\" name=\"third\" required />\n              <Input type=\"number\" name=\"fourth\" required />\n              <Input type=\"number\" name=\"fifth\" required />\n              <Input type=\"number\" name=\"sixth\" required />\n            </Wrapper>\n          </div>\n          <div>\n            <h4 className=\"input-caption\">보너스 번호</h4>\n            <Wrapper display=\"flex\" onChange={this.handleWinningNumberInputChange}>\n              <Input type=\"number\" name=\"bonus\" required />\n            </Wrapper>\n          </div>\n        </Wrapper>\n        <Button fullWidth>결과 확인하기</Button>\n      </WinningNumberFormWrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { Wrapper } from './components/common/Wrapper';\n\nexport const AppWrapper = styled(Wrapper)`\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  min-height: 800px;\n  width: 400px;\n  margin: 0 auto;\n\n  .app-title {\n    text-align: center;\n    margin-bottom: 3.5rem;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport TICKET from '../constants/ticket';\nimport { getRandomNumber } from '../utils/random';\n\nconst generateTicket = (): Ticket => {\n  const ticketNumbers = new Set<number>();\n  while (ticketNumbers.size < TICKET.NUMBER_LIST_LENGTH) {\n    ticketNumbers.add(getRandomNumber(TICKET.MIN_NUMBER, TICKET.MAX_NUMBER));\n  }\n\n  return { id: nanoid(), numbers: [...ticketNumbers] };\n};\n\nexport const issueTickets = (payment: number): Ticket[] => {\n  const ticketCount: number = Math.floor(payment / TICKET.PRICE);\n\n  return [...Array(ticketCount)].map(() => generateTicket());\n};\n","export const getRandomNumber = (min: number, max: number): number => {\n  return Math.floor(Math.random() * max + min);\n};\n","export const getRemainedTime = () => {\n  const nowDate: Date = new Date();\n  const announcementDate: Date = new Date(\n    nowDate.getFullYear(),\n    nowDate.getMonth(),\n    nowDate.getDate(),\n    20,\n    45\n  );\n  announcementDate.setDate(nowDate.getDate() + Math.abs(6 - nowDate.getDay()));\n\n  return announcementDate.getTime() - nowDate.getTime();\n};\n","import { Wrapper } from '../common/Wrapper';\nimport styled from 'styled-components';\n\nexport const RemainedTimeWrapper = styled(Wrapper)`\n  .remain-time-text {\n    font-size: 1.5rem;\n    text-align: center;\n    font-weight: bold;\n    margin: 12px 0px 8px 0px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { RemainedTimeWrapper } from './RemainedTime.styles';\n\ntype Props = {\n  remainTime: Date | null;\n};\n\nexport default class RemainedTime extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const date = this.props.remainTime?.getDate();\n    const hours = this.props.remainTime?.getHours();\n    const minutes = this.props.remainTime?.getMinutes();\n    const seconds = this.props.remainTime?.getSeconds();\n\n    return (\n      <RemainedTimeWrapper>\n        <p className=\"remain-time-text\">\n          당첨발표까지 {date}일 {hours}시 {minutes}분 {seconds}초 남았습니다.\n        </p>\n      </RemainedTimeWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PaymentForm from './components/PaymentForm/PaymentForm';\nimport TicketList from './components/TicketList/TicketList';\nimport ResultModal from './components/ResultModal/ResultModal';\nimport WinningNumberForm from './components/WinningNumberForm/WinningNumberForm';\nimport { AppWrapper } from './App.styles';\nimport { issueTickets } from './services/tickets';\nimport ALERT_MESSAGE from './constants/alertMessage';\nimport { getRemainedTime } from './utils/date';\nimport { GREENWICH_MILLISECONDS } from './services/game';\nimport RemainedTime from './components/RemainedTime/RemainedTime';\n\ntype State = {\n  tickets: Ticket[];\n  winningNumber: WinningNumber;\n  isModalOpen: boolean;\n  remainTime: Date | null;\n};\n\nexport default class App extends Component<{}, State> {\n  winningNumberFormRef: React.RefObject<HTMLFormElement>;\n  remainTimer: NodeJS.Timeout | null;\n\n  constructor(props: {}) {\n    super(props);\n    this.winningNumberFormRef = React.createRef();\n    this.remainTimer = null;\n\n    this.state = {\n      tickets: [],\n      winningNumber: {\n        numbers: [],\n        bonus: 0,\n      },\n      isModalOpen: false,\n      remainTime: null,\n    };\n\n    this.handlePayment = this.handlePayment.bind(this);\n    this.handleWinningNumber = this.handleWinningNumber.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n    this.handleRemainedTime = this.handleRemainedTime.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  handleRemainedTime() {\n    this.setState({\n      remainTime: new Date(getRemainedTime() - GREENWICH_MILLISECONDS),\n    });\n  }\n\n  handlePayment(payment: number) {\n    const tickets: Ticket[] = issueTickets(payment);\n    this.setState({\n      tickets,\n    });\n\n    this.handleRemainedTime();\n    this.remainTimer = setInterval(() => {\n      this.handleRemainedTime();\n    }, 1000);\n  }\n\n  handleWinningNumber(winningNumber: WinningNumber) {\n    const ticketCount = this.state.tickets.length;\n\n    if (ticketCount === 0) {\n      alert(ALERT_MESSAGE.SHOULD_BUY_TICKET);\n      return;\n    }\n\n    this.setState({\n      winningNumber,\n    });\n\n    this.handleModal(true);\n  }\n\n  handleModal(isOpen: boolean) {\n    this.setState({\n      isModalOpen: isOpen,\n    });\n  }\n\n  resetGame() {\n    this.setState({\n      tickets: [],\n      winningNumber: {\n        numbers: [],\n        bonus: 0,\n      },\n      isModalOpen: false,\n      remainTime: null,\n    });\n\n    this.winningNumberFormRef.current?.reset();\n    this.remainTimer && clearInterval(this.remainTimer);\n  }\n\n  render() {\n    const { remainTime, tickets, winningNumber, isModalOpen } = this.state;\n    return (\n      <AppWrapper display=\"flex\">\n        <h1 className=\"app-title\">🎱 행운의 로또</h1>\n        <PaymentForm handlePayment={this.handlePayment} />\n        {remainTime && <RemainedTime remainTime={remainTime} />}\n        <TicketList tickets={tickets} />\n        <WinningNumberForm\n          handleWinningNumber={this.handleWinningNumber}\n          formRef={this.winningNumberFormRef}\n        />\n\n        {isModalOpen && (\n          <ResultModal\n            handleModalClose={() => this.handleModal(false)}\n            resetGame={this.resetGame}\n            tickets={tickets}\n            winningNumber={winningNumber}\n          />\n        )}\n      </AppWrapper>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalStyle from './Global.styles';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}