{"ast":null,"code":"import _classCallCheck from\"/home/jho2301/wooteco/lv2/lotto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jho2301/wooteco/lv2/lotto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/jho2301/wooteco/lv2/lotto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/jho2301/wooteco/lv2/lotto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/jho2301/wooteco/lv2/lotto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"/home/jho2301/wooteco/lv2/lotto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{Component}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ToggleWrapper=styled.label(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  z-index: 0;\\n  position: relative;\\n\\n  .toggle-button {\\n    appearance: none;\\n    -moz-appearance: none;\\n    -webkit-appearance: none;\\n    z-index: -1;\\n    position: absolute;\\n    right: 6px;\\n    top: -8px;\\n    display: block;\\n    margin: 0;\\n    border-radius: 50%;\\n    width: 40px;\\n    height: 40px;\\n    outline: none;\\n    opacity: 0;\\n    transform: scale(1);\\n    pointer-events: none;\\n    transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;\\n  }\\n\\n  /* Span */\\n  .toggle-text {\\n    display: inline-block;\\n    width: 100%;\\n    cursor: pointer;\\n  }\\n\\n  /* Track */\\n  .toggle-text::before {\\n    content: '';\\n    float: right;\\n    display: inline-block;\\n    margin: 5px 0 5px 10px;\\n    border-radius: 7px;\\n    width: 36px;\\n    height: 14px;\\n    background-color: rgba(0, 0, 0, 0.38);\\n    vertical-align: top;\\n    transition: background-color 0.2s, opacity 0.2s;\\n  }\\n\\n  .toggle-text::after {\\n    content: '';\\n    position: absolute;\\n    top: 2px;\\n    right: 16px;\\n    border-radius: 50%;\\n    width: 20px;\\n    height: 20px;\\n    background-color: white;\\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\\n      0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n    transition: background-color 0.2s, transform 0.2s;\\n  }\\n\\n  .toggle-button:checked {\\n    right: -10px;\\n    background-color: rgb(0, 188, 212);\\n  }\\n\\n  .toggle-button:checked + .toggle-text::before {\\n    background-color: rgba(0, 188, 212, 0.6);\\n  }\\n\\n  .toggle-button:checked + .toggle-text::after {\\n    background-color: rgb(0, 188, 212);\\n    transform: translateX(16px);\\n  }\\n\\n  /* Hover, Focus */\\n  &:hover > .toggle-button {\\n    opacity: 0.04;\\n  }\\n\\n  .toggle-button:focus {\\n    opacity: 0.12;\\n  }\\n\\n  &:hover > .toggle-button:focus {\\n    opacity: 0.16;\\n  }\\n\\n  .toggle-button:active {\\n    opacity: 1;\\n    transform: scale(0);\\n    transition: transform 0s, opacity 0s;\\n  }\\n\\n  .toggle-button:active + .toggle-text::before {\\n    background-color: rgba(0, 188, 212, 0.6);\\n  }\\n\\n  .toggle-button:checked:active + .toggle-text::before {\\n    background-color: rgba(0, 0, 0, 0.38);\\n  }\\n\\n  .toggle-button:disabled {\\n    opacity: 0;\\n  }\\n\\n  .toggle-button:disabled + .toggle-text {\\n    color: black;\\n    opacity: 0.38;\\n    cursor: default;\\n  }\\n\\n  .toggle-button:disabled + .toggle-text::before {\\n    background-color: rgba(0, 0, 0, 0.38);\\n  }\\n\\n  .toggle-button:checked:disabled + .toggle-text::before {\\n    background-color: rgba(0, 188, 212, 0.6);\\n  }\\n\"])));var Toggle=/*#__PURE__*/function(_Component){_inherits(Toggle,_Component);var _super=_createSuper(Toggle);function Toggle(props){var _this;_classCallCheck(this,Toggle);_this=_super.call(this,props);_this.handleToggle=_this.handleToggle.bind(_assertThisInitialized(_this));return _this;}_createClass(Toggle,[{key:\"handleToggle\",value:function handleToggle(event){this.props.onToggle(event.target.checked);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(ToggleWrapper,{children:[/*#__PURE__*/_jsx(\"input\",{onChange:this.handleToggle,type:\"checkbox\",className:\"toggle-button\"}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-text\",children:this.props.children})]});}}]);return Toggle;}(Component);export{Toggle as default};","map":{"version":3,"sources":["/home/jho2301/wooteco/lv2/lotto/src/components/common/Toggle.tsx"],"names":["React","Component","styled","ToggleWrapper","label","Toggle","props","handleToggle","bind","event","onToggle","target","checked","children"],"mappings":"w6BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGD,MAAM,CAACE,KAAV,kiFAAnB,C,GA2HqBC,CAAAA,M,gGACnB,gBAAYC,KAAZ,CAA0B,wCACxB,uBAAMA,KAAN,EAEA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CAHwB,aAIzB,C,+CAED,sBAAaC,KAAb,CAAyD,CACvD,KAAKH,KAAL,CAAWI,QAAX,CAAoBD,KAAK,CAACE,MAAN,CAAaC,OAAjC,EACD,C,sBAED,iBAAS,CACP,mBACE,MAAC,aAAD,yBACE,cAAO,QAAQ,CAAE,KAAKL,YAAtB,CAAoC,IAAI,CAAC,UAAzC,CAAoD,SAAS,CAAC,eAA9D,EADF,cAEE,aAAM,SAAS,CAAC,aAAhB,UAA+B,KAAKD,KAAL,CAAWO,QAA1C,EAFF,GADF,CAMD,C,oBAlBiCZ,S,SAAfI,M","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleWrapper = styled.label`\n  z-index: 0;\n  position: relative;\n\n  .toggle-button {\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    z-index: -1;\n    position: absolute;\n    right: 6px;\n    top: -8px;\n    display: block;\n    margin: 0;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    outline: none;\n    opacity: 0;\n    transform: scale(1);\n    pointer-events: none;\n    transition: opacity 0.3s 0.1s, transform 0.2s 0.1s;\n  }\n\n  /* Span */\n  .toggle-text {\n    display: inline-block;\n    width: 100%;\n    cursor: pointer;\n  }\n\n  /* Track */\n  .toggle-text::before {\n    content: '';\n    float: right;\n    display: inline-block;\n    margin: 5px 0 5px 10px;\n    border-radius: 7px;\n    width: 36px;\n    height: 14px;\n    background-color: rgba(0, 0, 0, 0.38);\n    vertical-align: top;\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n\n  .toggle-text::after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    right: 16px;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    background-color: white;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n      0 1px 5px 0 rgba(0, 0, 0, 0.12);\n    transition: background-color 0.2s, transform 0.2s;\n  }\n\n  .toggle-button:checked {\n    right: -10px;\n    background-color: rgb(0, 188, 212);\n  }\n\n  .toggle-button:checked + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  .toggle-button:checked + .toggle-text::after {\n    background-color: rgb(0, 188, 212);\n    transform: translateX(16px);\n  }\n\n  /* Hover, Focus */\n  &:hover > .toggle-button {\n    opacity: 0.04;\n  }\n\n  .toggle-button:focus {\n    opacity: 0.12;\n  }\n\n  &:hover > .toggle-button:focus {\n    opacity: 0.16;\n  }\n\n  .toggle-button:active {\n    opacity: 1;\n    transform: scale(0);\n    transition: transform 0s, opacity 0s;\n  }\n\n  .toggle-button:active + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n\n  .toggle-button:checked:active + .toggle-text::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  .toggle-button:disabled {\n    opacity: 0;\n  }\n\n  .toggle-button:disabled + .toggle-text {\n    color: black;\n    opacity: 0.38;\n    cursor: default;\n  }\n\n  .toggle-button:disabled + .toggle-text::before {\n    background-color: rgba(0, 0, 0, 0.38);\n  }\n\n  .toggle-button:checked:disabled + .toggle-text::before {\n    background-color: rgba(0, 188, 212, 0.6);\n  }\n`;\n\ntype Props = {\n  onToggle: (isToggled: boolean) => void;\n};\n\nexport default class Toggle extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onToggle(event.target.checked);\n  }\n\n  render() {\n    return (\n      <ToggleWrapper>\n        <input onChange={this.handleToggle} type=\"checkbox\" className=\"toggle-button\" />\n        <span className=\"toggle-text\">{this.props.children}</span>\n      </ToggleWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}